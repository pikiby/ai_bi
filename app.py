import os
import streamlit as st
from openai import OpenAI

# ---------- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã ----------
st.set_page_config(page_title="Streamline Chat", page_icon="üí¨", layout="centered")

# ---------- –°–∞–π–¥–±–∞—Ä —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ ----------
with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏")
    model = st.selectbox(
        "–ú–æ–¥–µ–ª—å",
        options=[
            "gpt-4o-mini",   # –±—ã—Å—Ç—Ä—ã–π/–¥–µ—à—ë–≤—ã–π
            "gpt-4o",        # –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω–µ–µ
            "gpt-4.1-mini",  # –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞
        ],
        index=0,
    )
    temperature = st.slider("Temperature", 0.0, 1.0, 0.2, 0.05)
    system_prompt = st.text_area(
        "System prompt",
        value="–¢—ã ‚Äî –ø–æ–ª–µ–∑–Ω—ã–π –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç. –û—Ç–≤–µ—á–∞–π –∫—Ä–∞—Ç–∫–æ –∏ –ø–æ –¥–µ–ª—É.",
        height=120,
    )
    st.caption("–ò—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞ –º–æ–∂–Ω–æ –æ—á–∏—Å—Ç–∏—Ç—å –∫–Ω–æ–ø–∫–æ–π –Ω–∏–∂–µ.")
    if st.button("–û—á–∏—Å—Ç–∏—Ç—å –∏—Å—Ç–æ—Ä–∏—é"):
        st.session_state.messages = []

# ---------- –ö–ª–∏–µ–Ω—Ç OpenAI ----------
api_key = os.getenv("OPENAI_API_KEY")
if not api_key:
    st.error("–ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY –Ω–µ –∑–∞–¥–∞–Ω–∞.")
    st.stop()

client = OpenAI(api_key=api_key)

# ---------- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∏—Å—Ç–æ—Ä–∏–∏ ----------
if "messages" not in st.session_state:
    st.session_state.messages = []

# ---------- –ó–∞–≥–æ–ª–æ–≤–æ–∫ ----------
st.title("Chat ‚Üí ChatGPT")
st.caption("–ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å —á–∞—Ç-–±–æ—Ç–∞ –Ω–∞ Streamline/Streamlit, –ø–æ–¥–∫–ª—é—á—ë–Ω–Ω—ã–π –∫ OpenAI.")

# ---------- –†–µ–Ω–¥–µ—Ä –∏—Å—Ç–æ—Ä–∏–∏ ----------
for msg in st.session_state.messages:
    with st.chat_message(msg["role"]):
        st.markdown(msg["content"])

# ---------- –í–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ----------
user_input = st.chat_input("–ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ...")
if user_input:
    # 1) –ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    st.session_state.messages.append({"role": "user", "content": user_input})
    with st.chat_message("user"):
        st.markdown(user_input)

    # 2) –ü–æ—Ç–æ–∫–æ–≤—ã–π –æ—Ç–≤–µ—Ç –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç–∞
    with st.chat_message("assistant"):
        placeholder = st.empty()
        stream_text = ""

        # –°–æ–±–∏—Ä–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏—è: system + –∏—Å—Ç–æ—Ä–∏—è
        messages = [{"role": "system", "content": system_prompt}] + [
            {"role": m["role"], "content": m["content"]} for m in st.session_state.messages
        ]

        # –ü–æ—Ç–æ–∫–æ–≤–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
        stream = client.chat.completions.create(
            model=model,
            messages=messages,
            temperature=temperature,
            stream=True,
        )

        for chunk in stream:
            delta = chunk.choices[0].delta.content or ""
            stream_text += delta
            placeholder.markdown(stream_text)

    # 3) –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ç–≤–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é
    st.session_state.messages.append({"role": "assistant", "content": stream_text})
